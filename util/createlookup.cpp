#include <stdio.h>
#include <stdlib.h>

#define MAX_DIGITS 20

void recPutDigits(int nominator, int denominator, int count, int leadingZeros) {
	if(nominator == 0) {
		return; 
	}

	if(count >= MAX_DIGITS) {
		return;
	}	

	if(nominator < 0) {
		fprintf(stderr, "out of range (%i/%i) \n", nominator, denominator); 
		exit(1); 
	}

	int digit = nominator / denominator; 
	if(digit == 0) {	
		recPutDigits( nominator * 10, denominator, count+1, leadingZeros+1); 
	} else { 
		for(;leadingZeros != 0; leadingZeros--) {	
			putchar('0'); 
		}

		putchar('0' + digit); 
		recPutDigits( (nominator - digit * denominator) * 10, denominator, count + 1, 0); 
	}
}

void printArray(char negative, int max) {

	if(!negative)
		printf("\"0\""); 

	for(int i = 1; i != max; i++) {
		int number = i; 

		if(negative) {
			number = ((~number) & max) + 1; 
		}

		putchar(','); 
		putchar(' '); 
		if((i % 4) == 0) {
			putchar('\n'); 
		}
		putchar('"'); 
		if(negative)
			putchar('-'); 
		putchar('.'); 
		recPutDigits(number * 10, max, 0, 0); 
		putchar('"');
	}
	if(negative) {
		printf(", \"-1\""); 
	}
	else {
		printf(", \"1\""); 
	}
}

int main(int argc, char **argv) { 
	printf("//This is autogenerated\n"); 
	if(argc == 2) {
		if(argv[1][0] == 'c') {
			printf("static char* charToFloatString[] = {\n"); 
			printArray(0, 0xFF);
			printf(" };");  
			exit(0); 
		}
		if(argv[1][0] == 's') {
			printf("static char* charToSignedShortString[] = {\n"); 
			//printArray(0, 0x7FFF);
			printArray(1, 0x7FFF);
			printf(" };");  
			exit(0); 
		}
	}

	printf("call with c or s\n"); 

	return 0; 
}

